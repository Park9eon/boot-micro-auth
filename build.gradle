buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"
apply plugin: "java"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

springBoot {
	buildInfo()
}

sourceCompatibility = 1.8

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict", "-Xenable-jvm-default"]
		jvmTarget = "1.8"
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict", "-Xenable-jvm-default"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
	maven { url 'https://repo.spring.io/libs-snapshot' }
}

dependencies {
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	// Spring
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	compile("org.springframework.cloud:spring-cloud-starter-oauth2")
	compile("org.springframework.security.oauth:spring-security-oauth2:${springSecurityOauth2Version}")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.session:spring-session-data-redis")
	compile("mysql:mysql-connector-java")
	compile("io.lettuce:lettuce-core:5.0.2.RELEASE")
	// Runtime
	runtime("org.springframework.boot:spring-boot-devtools")
	// Test
	testCompile("org.springframework.security:spring-security-test")
	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile("io.projectreactor:reactor-test")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-netflix:${springCloudNetflixVersion}"
	}
}
